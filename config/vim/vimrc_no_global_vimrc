set backupdir=~/.vim/bkup/
set encoding=utf8
set noundofile

" Mark tabs and spaces.
set list listchars=tab:»\ ,trail:·,extends:»,precedes:«

" Load manual pages.
runtime ftplugin/man.vim

" Set tex flavor.
let g:tex_flavor = 'latex'

if has("autocmd")
  autocmd BufNewFile,BufRead *.txt set filetype=text
  " For all text files disable text wrapping.
  autocmd FileType text setlocal textwidth=0
endif

if has("cscope")
	" Look for a 'cscope.out' file starting from the current directory,
	" going up to the root directory.
	let s:dirs = split(getcwd(), "/")
	while s:dirs != []
		let s:path = "/" . join(s:dirs, "/")
		if (filereadable(s:path . "/cscope.out"))
			execute "cs add " . s:path . "/cscope.out " . s:path . " -v"
			break
		endif
		let s:dirs = s:dirs[:-2]
	endwhile

	set csto=0	" Use cscope first, then ctags
	set cst		" Only search cscope
	set csverb	" Make cs verbose

	nmap <C-\>s :cs find s <C-R>=expand("<cword>")<CR><CR>
	nmap <C-\>g :cs find g <C-R>=expand("<cword>")<CR><CR>
	nmap <C-\>c :cs find c <C-R>=expand("<cword>")<CR><CR>
	nmap <C-\>t :cs find t <C-R>=expand("<cword>")<CR><CR>
	nmap <C-\>e :cs find e <C-R>=expand("<cword>")<CR><CR>
	nmap <C-\>f :cs find f <C-R>=expand("<cfile>")<CR><CR>
	nmap <C-\>i :cs find i ^<C-R>=expand("<cfile>")<CR>$<CR>
	nmap <C-\>d :cs find d <C-R>=expand("<cword>")<CR><CR>

	nmap <C-@>s :vert scs find s <C-R>=expand("<cword>")<CR><CR>
	nmap <C-@>g :vert scs find g <C-R>=expand("<cword>")<CR><CR>
	nmap <C-@>c :vert scs find c <C-R>=expand("<cword>")<CR><CR>
	nmap <C-@>t :vert scs find t <C-R>=expand("<cword>")<CR><CR>
	nmap <C-@>e :vert scs find e <C-R>=expand("<cword>")<CR><CR>
	nmap <C-@>f :vert scs find f <C-R>=expand("<cfile>")<CR><CR>
	nmap <C-@>i :vert scs find i ^<C-R>=expand("<cfile>")<CR>$<CR>
	nmap <C-@>d :vert scs find d <C-R>=expand("<cword>")<CR><CR>

	" Open a quickfix window for the following queries.
	set cscopequickfix=s-,c-,d-,i-,t-,e-,g-
endif

" When /etc/vim/vimrc is not initialized from /usr/share/vim/vimXY/vimrc_example.vim.
set history=50		" keep 50 lines of command line history
set showcmd		" display incomplete commands
set incsearch		" do incremental searching

" Don't use Ex mode, use Q for formatting
map Q gq

set autoindent		" always set autoindenting on
syntax on		" enable syntax highlighting

" Convenient command to see the difference between the current buffer and the
" file it was loaded from, thus the changes you made.
" Only define it when not defined already.
if !exists(":DiffOrig")
  command DiffOrig vert new | set bt=nofile | r ++edit # | 0d_ | diffthis
		  \ | wincmd p | diffthis
endif
